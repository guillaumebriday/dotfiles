# Global functions
digga () {
  dig +nocmd "$1" any +multiline +noall +answer
}

meteo () {
  city="$1"

  if [ -z "$city" ]; then
    city="lyon"
  fi

  curl -s "http://wttr.in/${city}?lang=fr"
}

install_ruby () {
  if [ -f .ruby-version ]; then
    rvm install "$(cat .ruby-version)"
  fi
}

path () {
  echo $PATH | tr ':' '\n'
}

port () {
  lsof -i"TCP:$1" -sTCP:LISTEN -n -P
}

# Node functions
autoload -U add-zsh-hook

load-n() {
  node_version=".node-version"

  if [ -f "$node_version" ]; then
    current_node_version=$(node -v)
    nvmrc_node_version=$(cat "${node_version}")

    if [ "$current_node_version" != "v${nvmrc_node_version}" ]; then
      n "$nvmrc_node_version"
    fi
  fi
}

add-zsh-hook chpwd load-n
load-n

# Docker functions
dbash () { docker exec -it "$1" /bin/bash; }

# Git functions
clone () {
  basename=$(basename $1 .git)

  git clone $1 && cd $basename
}

# Clean merged branches
sweep () {
  git branch --merged "$(git_main_branch)" | grep -v "$(git_main_branch)$" | xargs git branch -d && git remote prune origin
}

# Rails
prepare_rails () {
  echo 'Installing dependencies...'
  bundle install --jobs $(sysctl -n hw.logicalcpu) --quiet
  yarn install --silent --non-interactive

  echo 'Removing assets & cache...'
  rm -rf public/assets tmp/cache 2> /dev/null
}
